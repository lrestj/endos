##########################
#####  KEY BINDINGS  ##### ./hyprland.conf
##########################

# "Windows" key as main modifier
$mainMod = SUPER

# Run apps
bind = $mainMod, A, exec, $terminal
bind = ALT, F12, exec, alacritty
bind = CTRL SHIFT, B, exec, brave
bind = CTRL SHIFT, F, exec, $fileManager
bind = ctrl shift, y, exec, $terminal -e yazi
bind = CTRL SHIFT, E, exec, $terminal -T Vim -e vim
bind = CTRL SHIFT, S, exec, pkill simple-scan || simple-scan
bind = CTRL SHIFT, G, exec, geany
bind = CTRL SHIFT, K, exec, pkill $kalk || $kalk
bind = CTRL SHIFT, W, exec, waypaper
bind = CTRL SHIFT, T, exec, $terminal -e tmux  

#Submaps
bind = CTRL SHIFT, I,  exec, ~/.dotfiles/scripts/webmarks.sh
bind = CTRL SHIFT, I, submap, WebMarks
submap = WebMarks
bind = , G, exec, makoctl dismiss && brave https://mail.google.com/mail/u/0/
bind = , G, submap, reset
bind = , N, exec, makoctl dismiss && brave https://search.nixos.org/packages
bind = , N, submap, reset
bind = , P, exec, makoctl dismiss && brave https://prehrajto.cz/
bind = , P, submap, reset
bind = , S, exec, makoctl dismiss && brave https://sdilej.cz/
bind = , S, submap, reset
bind = , T, exec, makoctl dismiss && brave http://titulky.cz/
bind = , T, submap, reset
bind = , F, exec, makoctl dismiss && brave https://www.nerdfonts.com/cheat-sheet
bind = , F, submap, reset
# ...
bind = , escape, exec, makoctl dismiss 
bind = , escape, submap, reset
bind = , catchall, submap, reset
submap = reset

bind = CTRL SHIFT, N,  exec, ~/.dotfiles/scripts/nsubmap.sh
bind = CTRL SHIFT, N, submap, Nastavení
submap = Nastavení
bind = , V, exec, makoctl dismiss && foot -e vim ~/.config/vim/vimrc
bind = , V, submap, reset
bind = , Y, exec, makoctl dismiss && foot -e vim ~/.config/yazi/keymap.toml
bind = , Y, submap, reset
bind = , W, exec, makoctl dismiss && foot -e vim ~/.config/waybar/config.jsonc
bind = , W, submap, reset
bind = , M, exec, makoctl dismiss && foot -e vim ~/.config/mako/config
bind = , M, submap, reset
bind = , C, exec, makoctl dismiss && foot -e vim ~/.dotfiles/nixos/hosts/zbook/configuration.nix
bind = , C, submap, reset
bind = , F, exec, makoctl dismiss && foot -e vim ~/.dotfiles/nixos/flake.nix
bind = , F, submap, reset
bind = , P, exec, makoctl dismiss && foot -e vim ~/.dotfiles/nixos/modules/pkgs.nix
bind = , P, submap, reset
bind = , A, exec, makoctl dismiss && foot -e vim ~/.config/hypr/1-envAutostartDefaultApps.conf
bind = , A, submap, reset
bind = , I, exec, makoctl dismiss && foot -e vim ~/.config/hypr/2-inputLookFeel.conf
bind = , I, submap, reset
bind = , B, exec, makoctl dismiss && foot -e vim ~/.config/hypr/3-keyBindings.conf
bind = , B, submap, reset
bind = , R, exec, makoctl dismiss && foot -e vim ~/.config/hypr/4-windowsRules.conf
bind = , R, submap, reset
bind = , H, exec, makoctl dismiss && hyprctl reload
bind = , H, submap, reset
bind = , X, exec, makoctl dismiss && makoctl reload
bind = , X, submap, reset
# ...
bind = , escape, exec, makoctl dismiss 
bind = , escape, submap, reset
bind = , catchall, submap, reset
submap = reset

# Touchpad ON/OFF
bind = CTRL ALT, T, exec, $terminal --app-id script -e ~/.dotfiles/scripts/asktouchpad.sh 

# Rozložení klávesnice
bind = $mainMod, space, exec, ~/.dotfiles/scripts/kbdlayout.sh

# Nápověda
bind = $mainMod, N, exec, ~/.dotfiles/scripts/helpnotify.sh
bind = ALT, N, exec, ~/.dotfiles/scripts/binds.sh

# Time & date on mainMod+D
bind = $mainMod, D, exec, ~/.dotfiles/scripts/datetimenotify.sh

# Waybar toggle on mainMod Return
bind = $mainMod, Return, exec, pkill waybar || waybar

# Task bar on mainMod ALT+Return
bind = $mainMod ALT,  Return,  exec, pkill waybar && waybar --config ~/.config/waybar/config-taskbar

# Rofi toggle on SUPER
bindr = $mainMod, $mainMod_L, exec, pkill rofi || $menu

# Menu wlogout
bind = $mainMod, Y , exec, pkill wlogout || wlogout -s -c 5 -r 5 -L 500 -R 500 -T 350 B 400
bind = $mainMod, X, exec, pkill wlogout || ~/.dotfiles/scripts/power.sh

# OneDrive & Google Disk
bind = $mainMod, M, exec, ~/.dotfiles/scripts/clouds.sh

# Clipboard manager agent
# bind = $mainMod, C, exec, pkill clipse || $terminal --app-id clipse -e 'clipse'
bind = $mainMod, C, exec, pkill rofi || cliphist list | rofi -dmenu -display-columns 2 | cliphist decode | wl-copy

# Screenshots
bind = $mainMod, INSERT, exec, hyprshot -m window
bind = CTRL ALT, INSERT, exec, hyprshot -m output
bind = ALT, INSERT, exec, hyprshot -m region

# Master layout orientation toggle
bind = ALT, Tab, layoutmsg, orientationnext

# Fullscreen window
bind = $mainMod, F, fullscreen, 1
bind = $mainMod ALT, F, fullscreen, 0

# Center floating window
bind = ALT, Q, resizeactive, exact 900 600
bind = ALT, Q, centerwindow

# Floating windows toggle
bind = CTRL ALT, F, togglefloating
bind = CTRL ALT, F, resizeactive, exact 900 600
bind = CTRL ALT, F, centerwindow

# Close window, logout, screenlock, reboot
bind = $mainMod, Q, killactive
bind = $mainMod, Delete, exec, sleep 1 && hyprctl dispatch exit
bind = CTRL ALT, Delete, exec, pidof hyprlock || hyprlock
bind = $mainMod ALT, Delete, exec, sleep 1 && systemctl reboot

# Move focus
bind = $mainMod, L, movefocus, r
bind = $mainMod, H, movefocus, l
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move windows
bind = $mainMod ALT, H, movewindow, l
bind = $mainMod ALT, L, movewindow, r
bind = $mainMod ALT, K, movewindow, u
bind = $mainMod ALT, J, movewindow, d

# Resize windows
binde = $mainMod, right, resizeactive, 10 0
binde = $mainMod, left, resizeactive, -10 0
binde = $mainMod, up, resizeactive, 0 -10
binde = $mainMod, down, resizeactive, 0 10

# Move/resize windows with mouse
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Switch workspaces
bind = ALT, KP_End, workspace, 1
bind = ALT, KP_Down, workspace, 2
bind = ALT, KP_Next, workspace, 3
bind = ALT, KP_Left, workspace, 4
bind = ALT, KP_Begin, workspace, 5
bind = ALT, KP_Right, workspace, 6

# Move active window to a workspace
bind = $mainMod ALT, KP_End, movetoworkspace, 1
bind = $mainMod ALT, KP_Down, movetoworkspace, 2
bind = $mainMod ALT, KP_Next, movetoworkspace, 3
bind = $mainMod ALT, KP_Left, movetoworkspace, 4
bind = $mainMod ALT, KP_Begin, movetoworkspace, 5
bind = $mainMod ALT, KP_Right, movetoworkspace, 6
bind = SHIFT, KP_End, movetoworkspacesilent, 1
bind = SHIFT, KP_Down, movetoworkspacesilent, 2
bind = SHIFT, KP_Next, movetoworkspacesilent, 3
bind = SHIFT, KP_Left, movetoworkspacesilent, 4
bind = SHIFT, KP_Begin, movetoworkspacesilent, 5
bind = SHIFT, KP_Right, movetoworkspacesilent, 6

# Special workspaces (scratchpads)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod ALT, S, movetoworkspacesilent, special:magic

# Scroll workspaces
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = CTRL, Tab, workspace, e+1

# Laptop multimedia keys for volume and LCD brightness
bindel=, XF86AudioRaiseVolume,  exec, notify-send -c center "hlasitost" -h string:x-canonical-private-synchronous:progress \
                                      -h int:value:$(( (( $(pamixer --allow-boost --set-limit 150 -i 5 && pamixer --get-volume) - 1 )) % 100 + 1 ))
bindel=, XF86AudioLowerVolume,  exec, notify-send -c center "hlasitost" -h string:x-canonical-private-synchronous:progress \
                                      -h int:value:$(( (( $(pamixer --allow-boost --set-limit 150 -d 5 && pamixer --get-volume) - 1 )) % 100 + 1 ))
bind = , XF86AudioMute,    exec, pamixer --toggle-mute && notify-send -c center "hlasitost" -h string:x-canonical-private-synchronous:progress \
                                 -h int:value:$(( (( $([ "$(pamixer --get-mute)" = "true" ] && echo 0 || pamixer --get-volume) - 1 )) % 100 + 1 ))
bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send -c center "mic" -h string:x-canonical-private-synchronous:progress \
                                 -h int:value:$([ "$(pactl get-source-mute @DEFAULT_SOURCE@ | awk '{print $2}')" = "yes" ] && echo 0 || echo 100)
bindel=, XF86MonBrightnessUp,   exec, notify-send -c center "jas" -h string:x-canonical-private-synchronous:progress \
                                      -h int:value:$(brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p')
bindel=, XF86MonBrightnessDown, exec, notify-send -c center "jas" -h string:x-canonical-private-synchronous:progress \
                                      -h int:value:$(brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p')

#####  END OF FILE  #####
